{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\Latest ReactJS\\\\myFoodApp\\\\src\\\\components\\\\Meals\\\\Meal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './Meal.module.css';\nimport MealItem from './MealItem';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Meal = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState();\n  const [serviceError, setServiceError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://food-delivery-fa2bb-default-rtdb.firebaseio.com/meals.json');\n      const responseData = await response.json(); // console.log(responseData);\n\n      const loadedMeals = [];\n\n      for (let i in responseData) {\n        loadedMeals.push({\n          id: i,\n          name: responseData[i].name,\n          description: responseData[i].description,\n          price: responseData[i].price\n        });\n      } // console.log(loadedMeals);\n\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setServiceError(error.message);\n    });\n  }, []);\n  const mealList = meals.map(e => {\n    return /*#__PURE__*/_jsxDEV(MealItem, {\n      id: e.id,\n      name: e.name,\n      description: e.description,\n      price: e.price\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this), !isLoading && serviceError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: 'red'\n        },\n        children: \"Something went Wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }, this), !isLoading && mealList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Meal, \"YJTlfwRMbiu6mK3feaFj28k1/8U=\");\n\n_c = Meal;\nexport default Meal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meal\");","map":{"version":3,"sources":["F:/Prasad/DEV/Latest ReactJS/myFoodApp/src/components/Meals/Meal.js"],"names":["React","useState","classes","MealItem","useEffect","Meal","meals","setMeals","isLoading","setIsLoading","serviceError","setServiceError","fetchMeals","response","fetch","responseData","json","loadedMeals","i","push","id","name","description","price","catch","error","message","mealList","map","e","textAlign","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,UAAU,GAAG,YAAY;AAC3BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B,CAH2B,CAI3B;;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAT,IAAcH,YAAd,EAA4B;AACxBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,UAAAA,EAAE,EAAEF,CADS;AAEbG,UAAAA,IAAI,EAAEN,YAAY,CAACG,CAAD,CAAZ,CAAgBG,IAFT;AAGbC,UAAAA,WAAW,EAAEP,YAAY,CAACG,CAAD,CAAZ,CAAgBI,WAHhB;AAIbC,UAAAA,KAAK,EAAER,YAAY,CAACG,CAAD,CAAZ,CAAgBK;AAJV,SAAjB;AAMH,OAb0B,CAc3B;;;AACAhB,MAAAA,QAAQ,CAACU,WAAD,CAAR;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAjBD;;AAkBAG,IAAAA,UAAU,GAAGY,KAAb,CAAoBC,KAAD,IAAW;AAC1BhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAACc,KAAK,CAACC,OAAP,CAAf;AACH,KAHD;AAIH,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,QAAMC,QAAQ,GACVrB,KAAK,CAACsB,GAAN,CAAUC,CAAC,IAAI;AACX,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEA,CAAC,CAACT,EAFV;AAGI,MAAA,IAAI,EAAES,CAAC,CAACR,IAHZ;AAII,MAAA,WAAW,EAAEQ,CAAC,CAACP,WAJnB;AAKI,MAAA,KAAK,EAAEO,CAAC,CAACN;AALb,OACSM,CAAC,CAACT,EADX;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATD,CADJ;AAYA,sBAAO;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACI,KAA5B;AAAA,2BACH;AAAA,iBACKE,SAAS,iBAAI;AAAG,QAAA,KAAK,EAAE;AAACsB,UAAAA,SAAS,EAAC;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADlB,EAEK,CAACtB,SAAD,IAAcE,YAAd,iBAA8B;AAAG,QAAA,KAAK,EAAE;AAACoB,UAAAA,SAAS,EAAC,QAAX;AAAqBC,UAAAA,KAAK,EAAC;AAA3B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFnC,EAGK,CAACvB,SAAD,IAAcmB,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CAlDD;;GAAMtB,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './Meal.module.css';\r\nimport MealItem from './MealItem';\r\nimport { useEffect } from 'react';\r\n\r\nconst Meal = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [serviceError, setServiceError] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            setIsLoading(true);\r\n            const response = await fetch('https://food-delivery-fa2bb-default-rtdb.firebaseio.com/meals.json');\r\n            const responseData = await response.json();\r\n            // console.log(responseData);\r\n            const loadedMeals = [];\r\n            for (let i in responseData) {\r\n                loadedMeals.push({\r\n                    id: i,\r\n                    name: responseData[i].name,\r\n                    description: responseData[i].description,\r\n                    price: responseData[i].price\r\n                });\r\n            }\r\n            // console.log(loadedMeals);\r\n            setMeals(loadedMeals);\r\n            setIsLoading(false);\r\n        }\r\n        fetchMeals().catch((error) => {\r\n            setIsLoading(false);\r\n            setServiceError(error.message);\r\n        });\r\n    }, []);\r\n\r\n    const mealList =\r\n        meals.map(e => {\r\n            return (\r\n                <MealItem\r\n                    key={e.id}\r\n                    id={e.id}\r\n                    name={e.name}\r\n                    description={e.description}\r\n                    price={e.price} />\r\n            )\r\n        });\r\n\r\n    return <section className={classes.meals}>\r\n        <ul>\r\n            {isLoading && <p style={{textAlign:'center'}}>Loading...</p>}\r\n            {!isLoading && serviceError && <p style={{textAlign:'center', color:'red'}}>Something went Wrong!</p>}\r\n            {!isLoading && mealList}\r\n        </ul>\r\n    </section>\r\n\r\n};\r\n\r\nexport default Meal;"]},"metadata":{},"sourceType":"module"}