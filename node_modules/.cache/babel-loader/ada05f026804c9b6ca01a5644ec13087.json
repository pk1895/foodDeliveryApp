{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\Latest ReactJS\\\\myFoodApp\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() !== '';\n\nconst Checkout = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n    form: false\n  });\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const nameInputVal = nameInputRef.current.value;\n    const streetInputVal = streetInputRef.current.value;\n    const postalInputVal = postalInputRef.current.value;\n    const cityInputVal = cityInputRef.current.value;\n    setFormValidity({\n      name: isEmpty(nameInputVal),\n      street: isEmpty(streetInputVal),\n      postal: isEmpty(postalInputVal),\n      city: isEmpty(cityInputVal)\n    });\n\n    if (formValidity.name && formValidity.street && formValidity.postal && formValidity.city) {\n      setFormValidity({\n        form: true\n      });\n    }\n  };\n\n  const nameClass = `${classes.control} ${!formValidity.name ? classes.invalid : ''}`;\n  const streetClass = `${classes.control} ${!formValidity.street ? classes.invalid : ''}`;\n  const postalClass = `${classes.control} ${!formValidity.postal ? classes.invalid : ''}`;\n  const cityClass = `${classes.control} ${!formValidity.city ? classes.invalid : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"wkrSjGrw+eR8R8ad9pJP6Y8C5cI=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["F:/Prasad/DEV/Latest ReactJS/myFoodApp/src/components/Cart/Checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","Checkout","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","formValidity","setFormValidity","name","street","postal","city","form","confirmHandler","event","preventDefault","nameInputVal","current","streetInputVal","postalInputVal","cityInputVal","nameClass","control","invalid","streetClass","postalClass","cityClass","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst isEmpty = (value) => value.trim() !== '';\r\nconst Checkout = (props) => {\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const [formValidity, setFormValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    postal: true,\r\n    city: true,\r\n    form: false\r\n  });\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const nameInputVal = nameInputRef.current.value;\r\n    const streetInputVal = streetInputRef.current.value;\r\n    const postalInputVal = postalInputRef.current.value;\r\n    const cityInputVal = cityInputRef.current.value;\r\n\r\n    setFormValidity({\r\n      name: isEmpty(nameInputVal),\r\n      street: isEmpty(streetInputVal),\r\n      postal: isEmpty(postalInputVal),\r\n      city: isEmpty(cityInputVal)\r\n    });\r\n\r\n    if(formValidity.name && formValidity.street && formValidity.postal &&formValidity.city){\r\n      setFormValidity({\r\n        form: true\r\n      })\r\n    }\r\n  };\r\n\r\n  const nameClass = `${classes.control} ${!formValidity.name ? classes.invalid : ''}`;\r\n  const streetClass = `${classes.control} ${!formValidity.street ? classes.invalid : ''}`;\r\n  const postalClass = `${classes.control} ${!formValidity.postal ? classes.invalid : ''}`;\r\n  const cityClass = `${classes.control} ${!formValidity.city ? classes.invalid : ''}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameClass}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef} />\r\n        {!formValidity.name && <p>Please enter valid name</p>}\r\n      </div>\r\n      <div className={streetClass}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formValidity.street && <p>Please enter valid street</p>}\r\n      </div>\r\n      <div className={postalClass}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalInputRef} />\r\n        {!formValidity.postal && <p>Please enter valid postal code</p>}\r\n      </div>\r\n      <div className={cityClass}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formValidity.city && <p>Please enter valid city</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}